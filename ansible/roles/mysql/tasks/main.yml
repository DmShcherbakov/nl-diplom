---
# tasks file for mysql

- name: Install mariadb server and pymysql
  become: true
  apt:
    update_cache: true
    state: present
    name:
    - mariadb-server
    - python3-pymysql

- name: Modify configuration file to listen on all interfaces
  become: true
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: "^bind-address"
    line: "bind-address=0.0.0.0"

- name: Modify configuration file - uncomment log_bin
  become: true
  lineinfile:
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: "^#log_bin                = /var/log/mysql/mysql-bin.log"
    line: "log_bin                = /var/log/mysql/mysql-bin.log"

- name: Create DB-admin accaunt for using community.mysql modules
  become: true
  shell: mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'dbadmin'@'localhost' IDENTIFIED BY 'gfhjkm' WITH GRANT OPTION"

- name: Copy .my.cnf to user home directory
  copy:
    src: .my.cnf
    dest: ~/.my.cnf
    mode: 0600

- name: Configuration on Master node
  block:
  - name: Create replication account
    become: true
    shell: mysql -e "grant REPLICATION SLAVE on *.* to 'repl'@'{{ slave_ip_address }}' identified by 'oiwufksflsk'"
  - name: Modify configuration file to setup server ID
    become: true
    lineinfile:
      dest: /etc/mysql/mariadb.conf.d/50-server.cnf
      regexp: "^#server-id"
      line: "server-id=1"
  - name: Restart mysql service
    become: true
    service:
      name: mysql
      state: restarted
  - name: Get primary binlog file name and binlog position
    mysql_replication:
      mode: getprimary
    register: repl_stat
  when:
    - master is defined

- name: Configuration on Slave node
  block:
  - name: Modify configuration file to setup server ID
    become: true
    lineinfile:
      dest: /etc/mysql/mariadb.conf.d/50-server.cnf
      regexp: "^#server-id"
      line: "server-id=2"
  - name: Restart mysql service
    become: true
    service:
      name: mysql
      state: restarted
  - name: stop slave
    mysql_replication:
      mode: stopreplica
  - name: Setup replication
    mysql_replication:
      mode: changeprimary
      primary_host: "{{ master_ip_address }}"
      primary_user: repl
      primary_password: 'oiwufksflsk'
      primary_log_file: "{{ hostvars['db01'].repl_stat.File }}"
      primary_log_pos: "{{ hostvars['db01'].repl_stat.Position }}"
  - name: start slave
    mysql_replication:
      mode: startreplica
  when: 
    - slave is defined

- name: Creating DB and user
  block:
  - name: Create DB
    mysql_db:
      name: 'wordpress'
      state: present
  - name: Create user and permitions
    mysql_user:
      name: wordpress
      password: wordpress
      priv: 'wordpress.*:ALL'
      host: '192.168.1.%'
      state: present
  when:
    - master is defined
